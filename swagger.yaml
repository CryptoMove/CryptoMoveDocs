swagger: "2.0"
info:
  description: "CryptoMove API"
  version: "1.0.0"
  title: "CryptoMove API"
basePath: "/v1/user"
host: cryptomove-api.getsandbox.com
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /secret/delete:
    post:
      description: "Delete an authorized users key"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully deleted parameters"
        400:
          description: "Could not delete parameters"
        500:
          description: "Failed to delete user key"
  /server/betacode:
    post:
      description: "Verify beta code"
      tags:
        - "auth"
      responses:
        200:
          description: "Information regarding user beta code"
        400:
          description: "Could not find beta code"
  /login:
    post:
      description: "User login"
      tags:
        - "auth"
      responses:
        200:
          description: "logged in"
        400:
          description: "error"
  /login_authorization_code:
    post:
      description: "User login"
      tags:
        - "auth"
      responses:
        200:
          description: "logged in"
        400:
          description: "error"
  /authorization_code_email:
    post:
      description: "User login"
      tags:
        - "auth"
      responses:
        200:
          description: "get authorization code by email"
        400:
          description: "error"
  /refresh_token:
    post:
      description: "User refresh token"
      tags:
        - "auth"
      responses:
        200:
          description: "refresh token successful"
        400:
          description: "error"
  /resetpassword:
    post:
      description: "Reset Password"
      tags:
        - "auth"
      responses:
        200:
          description: "email sent"
        400:
          description: "error"
  /signup:
    post:
      description: "User signup"
      tags:
        - "auth"
      responses:
        200:
          description: "registration succeeded"
        400:
          description: "error"
  /secret/protect:
    post:
      description: "Protect an authorized users key"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to lock user key"
  /secret/protect_link:
    post:
      description: "Protect an authorized users key through a link"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to lock user key"
  /secret/update_expiration:
    post:
      description: "Update expiration date for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated expiration date"
        400:
          description: "Could not update expiration date"
        500:
          description: "Failed to update expiration date"
  /secret/update_description:
    post:
      description: "Update description for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated description date"
        400:
          description: "Could not update description date"
        500:
          description: "Failed to update description date"
  /secret/update_classification:
    post:
      description: "Update classification for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated classification"
        400:
          description: "Could not update classification"
        500:
          description: "Failed to update classification"
  /secret/expose:
    post:
      description: "Expose an authorized users key"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user key"
  /secret/expose_link:
    post:
      description: "Expose an authorized users key through a link"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user key"
  /secret/share:
    post:
      description: "share_key_to_other_usrid_authorized"
      tags:
        - "secrets"
      parameters:
        - name: sharing_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/SharingRequestParameters"
      responses:
        200:
          description: "Succesfully shared a key to specified users"
        400:
          description: "Could not share a key to specified users"
        500:
          description: "Failed to share a key to specified users"
  /secret/unshare:
    post:
      description: "unshare_a_key_authorized"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully unshare_a_key"
        400:
          description: "Could not unshare_a_key"
        500:
          description: "Failed to unshare_a_key"
  /secret/version_expose:
    post:
      description: "Expose a authorized user key current version"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully expose user key current version"
        400:
          description: "Could not expose user key current version"
        500:
          description: "Failed to get user key current version"
  /secret/version_expose_link:
    post:
      description: "Expose a authorized user key current version"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully expose user key current version"
        400:
          description: "Could not expose user key current version"
        500:
          description: "Failed to get user key current version"
  /secret/expose_expiration_time:
    post:
      description: "Expose user key version current expiration time for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully expose user key version expiration time"
        400:
          description: "Could not expose user key version expiration time"
        500:
          description: "Failed to get user key version expiration time"
  /secret/list:
    post:
      description: "List an authorized users secrets"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user secret"
  /secret/list_no_dup:
    post:
      description: "List an authorized users secrets"
      tags:
        - "secrets"
      responses:
        200:
          description: Returns a list of keys
          schema:
            $ref: "#/definitions/ListNoDupResponse"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user secret"
  /secret/version_list:
    post:
      description: "List user secrets versions for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully list all versions of current key"
        400:
          description: "Could not list all versions of current key"
        500:
          description: "Failed to list all versions of user secret"
  /secret/version_list_for_link:
    post:
      description: "List user secrets versions for link for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully list all versions of current key"
        400:
          description: "Could not list all versions of current key"
        500:
          description: "Failed to list all versions of user secret"
  /secret/update_key_metadata:
    post:
      description: "Update user key metadata for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully update user metadata versions of current key"
        400:
          description: "Failed to update user key metadata"
        500:
          description: "Failed to update user key metadata"
  /secret/update_user_metadata:
      post:
        description: "Update user metadata for authorized request"
        tags:
          - "secrets"
        responses:
          200:
            description: "Succesfully update user metadata versions of current key"
          400:
            description: "Failed to update user  metadata"
          500:
            description: "Failed to update user  metadata"
  /secret/user_metadata:
      post:
        description: "Get user metadata for authorized request"
        tags:
          - "secrets"
        responses:
          200:
            description: "Succesfully get user metadata versions of current key"
          400:
            description: "Failed to get user metadata"
          500:
            description: "Failed to get user metadata"
  /upload:
    post:
      tags:
        - "files"
      responses:
        200:
          description: "Got file succesfully"
        400:
          description: "Could not get file"

definitions:
  ProtectionGroup:
    type: "object"
    properties:
      protection_setting:
        type: "string"
        description: "Provides the following options:
          * Low: 2 copies, 4 parts, 1 move/day
          * Medium: 3 copies, 8 parts, 12 move/day
          * High: 4 copies, 16 parts, 24 move/day"
        enum:
          - "low"
          - "medium"
          - "high"
  SharingRequestParameters:
    type: object
    properties:
      key_name:
        type: string
        description: Plaintext name of the key
        required: true
      permission:
        type: string
        description: Write or Read Permissions
        required: true
        enum:
          - R
          - W
          - RW
      usr_id_from:
        type: string
        description: The email of the sharer
        required: true
      usr_id_to:
        type: string
        description: The email of the sharee
        required: true
  ListNoDupResponse:
    type: object
    properties:
      keys:
        description: Keys created by the user
        type: object
        properties:
          keyName:
            type: string
            description: Unique key name
      links:
        description: Keys shared to or from the user
        type: object
        properties:
          keyName:
            type: string
            description: Unique key name
      status:
        description: Status from the server
        type: string
