swagger: "2.0"
info:
  description: "CryptoMove API"
  version: "1.0.0"
  title: "CryptoMove API"
basePath: "/v1"
host: cryptomove-api.getsandbox.com
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /user/secret/delete:
    post:
      description: "Deletes a secret."
      tags:
        - "secrets"
      parameters:
        - name: delete_parameters
          in: body
          description: JSON parameters
          schema:
            $ref: "#/definitions/DeleteRequestParameters"
      responses:
        200:
          description: "Succesfully deleted parameters"
        400:
          description: "Could not delete parameters"
        500:
          description: "Failed to delete user key"
  /user/secret/version_delete:
    post:
      description: "Deletes a specific version of a secret."
      tags:
        - "secrets"
      parameters:
        - name: VersionDelete_parameters
          in: body
          description: JSON parameters
          schema:
            $ref: "#/definitions/VersionDeleteRequestParameters"
      responses:
        200:
          description: "Succesfully deleted parameters"
        400:
          description: "Could not delete parameters"
        500:
          description: "Failed to delete user key"
  /user/server/betacode:
    post:
      description: "Verify beta code"
      tags:
        - "auth"
      responses:
        200:
          description: "Information regarding user beta code"
        400:
          description: "Could not find beta code"
  /user/login:
    post:
      description: "User login"
      tags:
        - "auth"
      responses:
        200:
          description: "logged in"
        400:
          description: "error"
  /user/login_authorization_code:
    post:
      description: "User login"
      tags:
        - "auth"
      responses:
        200:
          description: "logged in"
        400:
          description: "error"
  /user/authorization_code_email:
    post:
      description: "User login"
      tags:
        - "auth"
      responses:
        200:
          description: "get authorization code by email"
        400:
          description: "error"
  /user/refresh_token:
    post:
      description: "User refresh token"
      tags:
        - "auth"
      responses:
        200:
          description: "refresh token successful"
        400:
          description: "error"
  /user/resetpassword:
    post:
      description: "Resets a user's password."
      tags:
        - "auth"
      parameters:
        - name: resetpassword_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ResetpasswordRequestParameters"
      responses:
        200:
          description: "email sent"
        400:
          description: "error"
  /user/signup:
    post:
      description: "Creates a new user."
      tags:
        - "auth"
      parameters:
        - name: signup_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/SignupRequestParameters"
      responses:
        200:
          description: "registration succeeded"
        400:
          description: "error"
  /user/secret/protect:
    post:
      description: "Stores a new key-value pair as a secret."
      tags:
        - "secrets"
      parameters:
        - name: protect_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ProtectRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to lock user key"
  /user/secret/protect_link:
    post:
      description: >
        Stores a new key-value pair as a secret.
        The key name is specified with a link.
      tags:
        - "secrets"
      parameters:
        - name: protectLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ProtectLinkRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to lock user key"
  /user/secret/update_expiration:
    post:
      description: "Updates the expiration date of a specific version of a secret."
      tags:
        - "secrets"
      parameters:
        - name: updateExpiration_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/UpdateExpirationRequestParameters"
      responses:
        200:
          description: "Succesfully updated expiration date"
        400:
          description: "Could not update expiration date"
        500:
          description: "Failed to update expiration date"
  /user/secret/update_description:
    post:
      description: "Update the description of a specifc version of a secret."
      tags:
        - "secrets"
      parameters:
        - name: updateDescription_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/updateDescriptionRequestParameters"
      responses:
        200:
          description: "Succesfully updated description date"
        400:
          description: "Could not update description date"
        500:
          description: "Failed to update description date"
  /user/secret/update_classification:
    post:
      description: "Update the classification of a secret."
      tags:
        - "secrets"
      parameters:
        - name: updateClassification_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/UpdateClassificationRequestParameters"

      responses:
        200:
          description: "Succesfully updated classification"
        400:
          description: "Could not update classification"
        500:
          description: "Failed to update classification"
  /user/secret/expose:
    post:
      description: "Exposes the value of a secret."
      tags:
        - "secrets"
      parameters:
        - name: expose_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ExposeRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user key"
  /user/secret/expose_link:
    post:
      description: >
        Exposes the value of a secret.
        The secret is identified by a key name that contains a link.
      tags:
        - "secrets"
      parameters:
        - name: exposeLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ExposeLinkRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user key"
  /user/secret/share:
    post:
      description: "Gives another user access to a secret. "
      tags:
        - "secrets"
      parameters:
        - name: sharing_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/SharingRequestParameters"
      responses:
        200:
          description: "Succesfully shared a key to specified users"
        400:
          description: "Could not share a key to specified users"
        500:
          description: "Failed to share a key to specified users"
  /user/secret/unshare:
    post:
      description: "Revokes a user's access to a secret."
      tags:
        - "secrets"
      parameters:
        - name: unshare_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/UnshareRequestParameters"
      responses:
        200:
          description: "Succesfully unshare_a_key"
        400:
          description: "Could not unshare_a_key"
        500:
          description: "Failed to unshare_a_key"
  /user/secret/version_expose:
    post:
      description: >
        Exposes the value of a specific version of a secret.
        To get a list of all versions, use /secret/version_list.
      tags:
        - "secrets"
      parameters:
        - name: versionExpose_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionExposeRequestParameters"
      responses:
        200:
          description: "Succesfully expose user key current version"
        400:
          description: "Could not expose user key current version"
        500:
          description: "Failed to get user key current version"
  /user/secret/version_expose_link:
    post:
      description: >
        Exposes the value of a specific version of a secret.
        The secret is identified by a key name that contains a link.
      tags:
        - "secrets"
      parameters:
        - name: versionExposeLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionExposeLinkRequestParameters"
      responses:
        200:
          description: "Succesfully expose user key current version"
        400:
          description: "Could not expose user key current version"
        500:
          description: "Failed to get user key current version"
  /user/secret/expose_expiration_time:
    post:
      description: "Expose user key version current expiration time for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully expose user key version expiration time"
        400:
          description: "Could not expose user key version expiration time"
        500:
          description: "Failed to get user key version expiration time"
  /user/secret/list:
    post:
      description: "Lists a user's secrets. "
      tags:
        - "secrets"
      parameters:
        - name: list_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ListRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user secret"
  /user/secret/list_no_dup:
    post:
      description: "Lists a user's secrets."
      tags:
        - "secrets"
      parameters:
        - name: listNoDup_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ListNoDupRequestParameters"
      responses:
        200:
          description: Returns a list of keys
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user secret"
  /user/secret/version_list:
    post:
      description: "Lists information about all versions of a secret."
      tags:
        - "secrets"
      parameters:
        - name: versionList_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionListRequestParameters"
      responses:
        200:
          description: "Succesfully list all versions of current key"
        400:
          description: "Could not list all versions of current key"
        500:
          description: "Failed to list all versions of user secret"
  /user/secret/version_list_for_link:
    post:
      description: >
        Lists information about all versions of a secret.
        The secret is identified by a key name that contains a link.
      tags:
        - "secrets"
      parameters:
        - name: versionListLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionListLinkRequestParameters"
      responses:
        200:
          description: "Succesfully list all versions of current key"
        400:
          description: "Could not list all versions of current key"
        500:
          description: "Failed to list all versions of user secret"
  /user/secret/update_key_metadata:
    post:
      description: "Update user key metadata for authorized request"
      tags:
        - "secrets"
      responses:
        200:
          description: "Succesfully update user metadata versions of current key"
        400:
          description: "Failed to update user key metadata"
        500:
          description: "Failed to update user key metadata"
  /user/secret/update_user_metadata:
      post:
        description: "Update user metadata for authorized request"
        tags:
          - "secrets"
        responses:
          200:
            description: "Succesfully update user metadata versions of current key"
          400:
            description: "Failed to update user  metadata"
          500:
            description: "Failed to update user  metadata"
  /user/secret/user_metadata:
      post:
        description: "Get user metadata for authorized request"
        tags:
          - "secrets"
        responses:
          200:
            description: "Succesfully get user metadata versions of current key"
          400:
            description: "Failed to get user metadata"
          500:
            description: "Failed to get user metadata"

definitions:
  ProtectionGroup:
    type: "object"
    properties:
      protection_setting:
        type: "string"
        description: "Provides the following options:
          * Low: 2 copies, 4 parts, 1 move/day
          * Medium: 3 copies, 8 parts, 12 move/day
          * High: 4 copies, 16 parts, 24 move/day"
        enum:
          - "low"
          - "medium"
          - "high"
  DeleteRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Name of the secret's key."
  VersionDeleteRequestParameters:
    type: object
    properties:
      email: 
        type: string
        description: Email of authorized user.
      key_name:
        type: string
        description: Name of secret's key.
      key_version:
        type: integer
        description: Version of the secret that you want to delete.
  ResetpasswordRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of user."
      connection:
        type: string
        description: "Name of the CryptoMove Tholos database."
  SignupRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of the new user."
      password:
        type: string
        description: "Password of the new user."
      beta_code:
        type: string
        description: "Identifier for beta version of CryptoMove Tholos."
  ProtectRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Key of the new secret."
      key_value:
        type: string
        description: "Value of the new secret."
      without_list:
        type: boolean
        description: >
          Prevents the response from listing the keys for all of
          the user's secrets.
  ProtectLinkRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Key of the new secret."
      key_value:
        type: string
        description: "Value of the new secret."
  ExposeRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Name of the secret's key."
  ExposeLinkRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Name of the secret's key."
  SharingRequestParameters:
    type: object
    properties:
      key_name:
        type: string
        description: Name of the secret's key.
      permission:
        type: string
        description: >
          Permissions to be granted to user.
          Write (W), Read (R), or both (RW).
        enum:
          - R
          - W
          - RW
      usr_id_from:
        type: string
        description: Email of the sharer.
      usr_id_to:
        type: string
        description: Email of the sharee.
  UnshareRequestParameters:
    type: object
    properties:
      usr_id_from:
        type: string
        description: "Email of user who will no longer have access to the secret."
      key_name:
        type: string
        description: "Name of secret's key."
  VersionExposeRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Name of the secret's key."
      key_version:
        type: string
        description: "A version number of the secret."
  VersionExposeLinkRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Name of the secret's key."
      key_version:
        type: string
        description: "A version number of the secret."
  ListRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of user with access to secrets."
  ListNoDupRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of user with access to secrets."
  VersionListRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Name of secret's key."
  VersionListLinkRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of authorized user."
      key_name:
        type: string
        description: "Name of secret's key."
  UpdateClassificationRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: Email of authorized user.
      key_name: 
        type: string
        description: Name of secret's key.
      Classification: 
        type: string
        description:
        enum:
          - sec
          - top
  UpdateExpirationRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: Email of authorized user.
      key_name:
        type: string
        description: Name of secret's key.
      Key_version:
        type: integer
        description: A version of the secret.
      expiration_time:
        type: integer
        description: The number of days before the version of the secret will expire.
  updateDescriptionRequestParameters:
    type: object
    properties:
      email: 
        type: string
        description: Email of authorized user.
      key_name: 
        type: string
        description: Name of secret's key.
      description:
        type: string
        description: New description of the secret.
      key_version:
        type: integer
        description: A version of the secret.
  ListNoDupResponse:
    type: object
    properties:
      keys:
        description: Keys created by the user
        type: object
        properties:
          keyName:
            type: string
            description: Unique key name
      links:
        description: Keys shared to or from the user
        type: object
        properties:
          keyName:
            type: string
            description: Unique key name
      status:
        description: Status from the server
        type: string