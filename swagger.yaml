swagger: "2.0"
info:
  description: "CryptoMove API"
  version: "1.5"
  title: "CryptoMove API"
basePath: "/v1"
host: api.cryptomove.com
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /user/secret/protect:
    post:
      description: >
        Stores a new secret. To create a new version of a secret,
        call this endpoint with an existing name and new value. The
        metadata object in the request body is optional. If excluded,
        the default metadata values are used. You can add custom key-value
        pairs in the metadata object.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: protect_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ProtectRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to lock user key"
  /user/secret/protect_link:
    post:
      description: >
        Updates a shared secret. You must have write access to the secret.
        You can modify metadata using the metadata object in the JSON request
        body. The metadata object can contain custom key:value pairs.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: protectLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ProtectLinkRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to lock user key"
  /user/secret/expose:
    post:
      description: >
        Reveals the most recent value of a secret. If you need to reveal the
        value of a shared secret, use the [expose_link](https://docs.cryptomove.com/reference#post_user-secret-expose-link)
        endpoint.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: expose_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ExposeRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user key"
  /user/secret/expose_link:
    post:
      description: >
        Exposes the most recent value of a shared secret.
        User must have read access to the secret.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: exposeLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ExposeLinkRequestParameters"
      responses:
        200:
          description: "Succesfully updated parameters"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user key"
  /user/secret/version_expose:
    post:
      description: >
        Reveals the value of a specific version of a secret.
        To get a list of all versions, use [version_list](https://docs.cryptomove.com/reference#post_user-secret-version-list).
        To reveal the value of a specific version of a shared secret, use the
        [version_expose_link](https://docs.cryptomove.com/reference#post_user-secret-version-expose-link)
        endpoint.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: versionExpose_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionExposeRequestParameters"
      responses:
        200:
          description: "Succesfully expose user key current version"
        400:
          description: "Could not expose user key current version"
        500:
          description: "Failed to get user key current version"
  /user/secret/version_expose_link:
    post:
      description: >
        Reveals the value of a specific version of a shared secret.
        User must have read access to the secret.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: versionExposeLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionExposeLinkRequestParameters"
      responses:
        200:
          description: "Succesfully expose user key current version"
        400:
          description: "Could not expose user key current version"
        500:
          description: "Failed to get user key current version"
  /user/secret/delete:
    post:
      description: >
        Deletes all versions of a secret. To delete
        only a specific version of the secret, use
        [version_delete](https://docs.cryptomove.com/reference#post_user-secret-version-delete).
        Only the user who created a secret can delete it.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: delete_parameters
          in: body
          description: JSON parameters
          schema:
            $ref: "#/definitions/DeleteRequestParameters"
      responses:
        200:
          description: "Succesfully deleted parameters"
        400:
          description: "Could not delete parameters"
        500:
          description: "Failed to delete user key"
  # /user/secret/delete_multiple_key:
  #   post:
  #     description: >
  #       Deletes multiple secrets using a single endpoint call.
  #       Only the user who created a secret can delete it.
  #     tags:
  #       - "secrets"
  #     parameters:
  #       - name: Authorization
  #         in: header
  #         type: string
  #         required: true
  #         description: >
  #           Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
  #       - name: deletemultiple_parameters
  #         in: body
  #         description: JSON parameters
  #         schema:
  #           $ref: "#/definitions/DeleteMultipleKeyRequestParameters"
  #     responses:
  #       200:
  #         description: "success"
  #       400:
  #         description: "error"
  /user/secret/delete_shared_key_link:
    post:
      description: >
        Allows a user to remove a secret that has been shared with them from their
        list of secrets. Calling this endpoint does not delete the shared secret; it
        simply removes it from the user's list of secrets.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: deleteshared_parameters
          in: body
          description: JSON parameters
          schema:
            $ref: "#/definitions/DeleteSharedKeyLinkRequestParameters"
      responses:
        200:
          description: "success"
        400:
          description: "error"
          
  /user/secret/version_delete:
    post:
      description: >
        Deletes a specific version of a secret. To delete all versions of a secret, use the
        [delete](https://docs.cryptomove.com/reference#post_user-secret-delete) endpoint.
        Only the user who created a secret can delete it.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: VersionDelete_parameters
          in: body
          description: JSON parameters
          schema:
            $ref: "#/definitions/VersionDeleteRequestParameters"
      responses:
        200:
          description: "Succesfully deleted parameters"
        400:
          description: "Could not delete parameters"
        500:
          description: "Failed to delete user key"
  /user/secret/share:
    post:
      description: >
        Gives another user access to a secret. Only the user who created
        the secret can share it with other users.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: sharing_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/SharingRequestParameters"
      responses:
        200:
          description: "Succesfully shared a key to specified users"
        400:
          description: "Could not share a key to specified users"
        500:
          description: "Failed to share a key to specified users"
  # /user/secret/unshare:
  #   post:
  #     description: "Revokes a user's access to a secret."
  #     tags:
  #       - "secrets"
  #     parameters:
  #       - name: Authorization
  #         in: header
  #         type: string
  #         required: true
  #         description: >
  #           Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
  #       - name: unshare_parameters
  #         description: JSON parameters
  #         in: body
  #         schema:
  #           $ref: "#/definitions/UnshareRequestParameters"
  #     responses:
  #       200:
  #         description: "Succesfully unshare_a_key"
  #       400:
  #         description: "Could not unshare_a_key"
  #       500:
  #         description: "Failed to unshare_a_key"
  /user/secret/update_key_metadata:
    post:
      description: >
        Updates metadata of a specific version of a secret or shared secret. To list the
        versions of a secret, use 
        [version_list](https://docs.cryptomove.com/reference#post_user-secret-version-list).
        To list the versions of a shared secret, use 
        [version_list_for_link](https://docs.cryptomove.com/reference#post_user-secret-version-list-for-link).
        You can add custom metadata to the secret's existing metadata by specifying
        unique key:value pairs in the JSON request body.
      tags:
        - secrets
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: updateMetadata_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/updateMetadataRequestParameters"
      responses:
        200:
          description: "success"
        400:
          description: "Error"
  /user/secret/update_description:
    post:
      description: >
        Updates the description of a specifc version of a secret. If you want to simultaneously
        update other metadata or update the description of a shared secret, use the
        [update_key_metadata](https://docs.cryptomove.com/reference#post_user-secret-update-key-metadata)
        endpoint. 
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: updateDescription_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/updateDescriptionRequestParameters"
      responses:
        200:
          description: "Succesfully updated description date"
        400:
          description: "Could not update description date"
        500:
          description: "Failed to update description date"
  /user/secret/update_classification:
    post:
      description: >
        Updates the classification of a secret. If you want to simultaneously
        update other metadata or update the classification of a shared secret, use the
        [update_key_metadata](https://docs.cryptomove.com/reference#post_user-secret-update-key-metadata)
        endpoint. 
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: updateClassification_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/UpdateClassificationRequestParameters"
      responses:
        200:
          description: "Succesfully updated classification"
        400:
          description: "Could not update classification"
        500:
          description: "Failed to update classification"
  /user/secret/update_expiration:
    post:
      description: >
        Updates the expiration date of a specific version of a secret.
        If you want to simultaneously update other metadata or update the expiration
        of a shared secret, use the
        [update_key_metadata](https://docs.cryptomove.com/reference#post_user-secret-update-key-metadata)
        endpoint. 
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: updateExpiration_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/UpdateExpirationRequestParameters"
      responses:
        200:
          description: "Succesfully updated expiration date"
        400:
          description: "Could not update expiration date"
        500:
          description: "Failed to update expiration date"
  /user/secret/list_no_dup:
    post:
      description: >
        Lists a user's secrets and shared secrets. To list all versions of each secret,
        use the [version_list](https://docs.cryptomove.com/reference#post_user-secret-version-list)
        endpoint.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: listNoDup_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ListNoDupRequestParameters"
      responses:
        200:
          description: Returns a list of keys
          schema:
            $ref: "#/definitions/ListNoDupResponse"
        400:
          description: "Could not update parameters"
        500:
          description: "Failed to restore user secret"
  /user/secret/version_list:
    post:
      description: >
        Lists details about all versions of a secret. To list secrets without listing
        each version, use the [list_no_dup](https://docs.cryptomove.com/reference#post_user-secret-list-no-dup)
        endpoint. To list information about all versions of a shared secret, use the
        [version_list_for_link](https://docs.cryptomove.com/reference#post_user-secret-version-list-for-link)
        endpoint.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: versionList_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionListRequestParameters"
      responses:
        200:
          description: "Succesfully list all versions of current key"
        400:
          description: "Could not list all versions of current key"
        500:
          description: "Failed to list all versions of user secret"
  /user/secret/version_list_for_link:
    post:
      description: >
        Lists information about all versions of a shared secret.
      tags:
        - "secrets"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: versionListLink_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/VersionListLinkRequestParameters"
      responses:
        200:
          description: "Succesfully list all versions of current key"
        400:
          description: "Could not list all versions of current key"
        500:
          description: "Failed to list all versions of user secret"
  /user/protect_file:
    post:
      description: >
        Uploads files for protection in the CryptoMove vault. Use the CountOfFiles
        parameter to upload multiple files in a single request. This endpoint is a multipart/form-data POST request.
      tags:
        - "files"
      consumes:
        - multipart/form-data
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: email
          in: header
          type: string
          required: true
          description: Email of the user who will own the file in CryptoMove.
        - name: CountOfFiles
          in: header
          type: string
          required: true
          description: Number of files to be uploaded.
        - name: upfile
          in: formData
          type: file
          required: true
          description: File to upload to CryptoMove.
      responses:
        200:
          description: "success"
  /user/download_file:
    post:
      description: >
        Downloads a file from CryptoMove as an http octet-stream response.
        By default, the latest version of the file is downloaded. Use
        the version parameter to download a different version. If you
        set the version parameter to 0, the latest version is downloaded.
      tags:
        - "files"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: downloadFile_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/DownloadFileRequestParameters"
      responses:
        200:
          description: "success"
  /user/list_file:
    post:
      description: Lists names and version numbers of the user's files currently in CryptoMove.
      tags:
        - "files"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: listFile_parameters
          description: JSON parameters
          in: body
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                description: Email of an authorized user.
      responses:
        200:
          description: "success"
  /user/delete_file:
    post:
      description: >
        Deletes a specific version of a file or all versions of a file,
        depending on whether the version parameter is specified. Only the user who uploaded
        a file can delete it. To delete all of a user's files at once,
        use [delete_all_files](https://docs.cryptomove.com/reference#post_user-delete-all-files).
      tags:
        - "files"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: deleteFile_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/DeleteFileRequestParameters"
      responses:
        200:
          description: "success"
  /user/delete_all_files:
    post:
      description: >
        Deletes all of the user's files. Only the user who uploaded a file can delete it.
        To delete a single file, use [delete_file](https://docs.cryptomove.com/reference#post_user-delete-file).
      tags:
        - "files"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: deleteAlFiles_parameters
          description: JSON parameters
          in: body
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                description: >
                  Email of an authorized user.
                  All of the user's files will be deleted.
      responses:
        200:
          description: "success"
  /user/analytics:
    get:
      description: >
        Returns a report about a user's secrets and files in the CryptoMove
        key vault. The user is identified by the access token in the header.
      tags:
        - "analytics"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
      responses:
        200:
          description: "success"
  /user/secret/set_user_aws_access_setting:
    post:
      description: >
        Provides CryptoMove with the access key ID and secret access key of your AWS
        access key. This access key must belong to the IAM user who will create your EC2 instances.
        Also specifies the region of your EC2 instances. You must set this information before calling
        the generate_aws_key endpoint to create a new AWS key pair. If you obtain a new AWS access key,
        simply call this endpoint again with the new access key ID and secret access key. For an
        overview of the CryptoMove-AWS integration, see
        [AWS Integration](https://docs.cryptomove.com/docs/integrations).
      tags:
        - "AWS integration"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: setAWS_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/SetAWSAccessParameters"
      responses:
        200:
          description: "success"
  /user/secret/get_user_aws_access_setting:
    post:
      description:
        Obtains the AWS access key ID and secret access key associated with
        a CryptoMove user. If you need to update the credentials, call the set_user_aws_access_setting
        endpoint with a new access key ID and secret access key.
      tags:
        - "AWS integration"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: getAWS_parameters
          description: JSON parameters
          in: body
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                description: Email of an authorized user.
      responses:
        200:
          description: "success"
  /user/secret/generate_aws_key:
    post:
      description: >
        Generates a new AWS key pair that is needed to create a new EC2 instance.
        The public key is automatically stored in AWS and the name of the key pair
        becomes available when creating a new EC2 instance. The private key needed to access
        the new instance once it is created is automatically stored in CryptoMove. When you need
        to access your EC2 instance, obtain the private key from CryptoMove using the
        [expose](https://docs.cryptomove.com/reference#post_user-secret-expose) endpoint. You must
        call the `set_user_aws_access_setting` endpoint to provide CryptoMove with your AWS
        access key before generating a AWS key pair using this endpoint.
        For an overview of the CryptoMove-AWS integration, see
        [AWS Integration](https://docs.cryptomove.com/docs/integrations).
      tags:
        - "AWS integration"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: generateAWS_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/GenerateAWSParameters"
      responses:
        200:
          description: "success"
  /user/signup:
    post:
      description: "Creates a new user."
      tags:
        - "auth"
      parameters:
        - name: signup_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/SignupRequestParameters"
      responses:
        200:
          description: "registration succeeded"
        400:
          description: "error"
  /user/logout:
    post:
      description: "Logs the user out of the system."
      tags:
        - "auth"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: logout_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/LogoutRequestParameters"
      responses:
        200:
          description: "success"
  /user/resetpassword:
    post:
      description: "Resets a user's password."
      tags:
        - "auth"
      parameters:
        - name: resetpassword_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/ResetpasswordRequestParameters"
      responses:
        200:
          description: "We've just sent you an email to reset your password."
        400:
          description: "error"
  /user/generate_access_token:
    post:
      description: >
        Returns an access token that can be used to authenticate API calls to CryptoMove. The
        "scope" parameter determines which secrets can be accessed by the API calls that are
        authenticated with the generated access token. For example, the following scope
        parameter generates a token that can be used to access secrets that have a
        classification of sensitive and a cloud type of Azure:
        
        "scope":"cloud_type:azure,environment_type:\*,application_type:\*,classification:sensitive,secret_name:\*"

        In this example, listing a user's secrets with the new access token would not
        return secrets with a classification of "top". Defining the value of every
        attribute as \* returns an access token that can be used to access all
        of the user's secrets. 
      tags:
        - "auth"
      parameters:
        - name: generatetoken_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/GenerateAccessTokenParameters"
      responses:
        200:
          description: "successful"
        400:
          description: "error"
  /user/refresh_token:
    post:
      description: >
        Acquires a new access token by passing a refresh token in the
        body of the request. For details on obtaining a refresh token,
        see [Access Tokens](https://docs.cryptomove.com/docs/access-tokens).
      tags:
        - "auth"
      parameters:
        - name: refreshtoken_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/RefreshTokenParameters"
      responses:
        200:
          description: "refresh token successful"
        400:
          description: "error"
  /user/soft-delete-user:
    post:
      description: >
        Allows users to deactivate their CryptoMove accounts. Deactivated users can
        contact CryptoMove to re-activate their account at a later time. To delete
        your account without the opportunity to recover the account later, use the
        [hard-delete-user](https://docs.cryptomove.com/reference#post_user-hard-delete-user)
        endpoint.
      tags:
        - "auth"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
      responses:
        200:
          description: success
        400:
          description: error  
  /user/hard-delete-user:
    post:
      description: >
        Allows users to delete themselves from CryptoMove with no ability to recover
        their accounts later. To deactivate yourself from CryptoMove, but reserve the
        ability to recover your account later, use the
        [soft-delete-user](https://docs.cryptomove.com/reference#post_user-soft-delete-user)
        endpoint.
      tags:
        - "auth"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
      responses:
        200:
          description: success
        400:
          description: error    
  /role/group_admin:
    post:
      description: >
        Allows an org admin to designate a user as a group admin and grant the new admin
        permissions to the group. Only an org admin with CREATE_GROUP_ADMIN
        and UPDATE_PERMISSION permissions can use this endpoint. An org admin can call
        this endpoint for an existing group admin to replace the admin's
        existing permissions with the specified ones. 
      tags: 
        - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: groupadmin_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/GroupAdminParameters"
      responses:
        200:
          description: success
        400:
          description: error  
    delete:
      description: >
        Removes a user from being an admin for one or more groups. If a group is not specified,
        the user stops being an admin for all groups in the domain.
      tags:
        - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: groupadmindelete_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/GroupAdminDeleteParameters"
      responses:
        200:
          description: success
        400:
          description: error  
    get: 
      description: >
        Lists the group admins for the specified groups along with their permissions.
      tags: 
        - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: groups
          in: query          
          type: string
          description: Comma-delimited list of group names.
      responses:
        200:
          description: success
        400:
          description: error  
  /role/group:
    post:
      description: >
        Creates a group and adds any specified users to the new group. You must have
        UPDATE_GROUP permission to use this endpoint. 
      tags:
        - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: group_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/GroupParameters"
      responses:
        200: 
          description: success
        400:
          description: error
    delete:
      description: >
        Deletes the specified group. You must have the UPDATE_GROUP permission to use
        this endpoint.
      tags: 
        - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: groupDelete_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/GroupDeleteParameters"
      responses: 
        200:
          description: success
        400:
          description: error
    get:
      description: >
        If at least one group is specified, returns a list of users who belong
        to the specified groups. In this case, you must have either the LIST_GROUP_USERS
        permission for the domain or the UPDATE_GROUP permission for the specified groups.
        You can list all groups within your domain by calling this endpoint without
        specifying any groups. In this case, you must have LIST_GROUP_USERS permission
        for the domain. 
      tags: 
          - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: groups
          in: query
          type: string
          description: Comma-delimited list of group names.
      responses:
        200:
          description: success
        400:
          description: error  
  /role/user:
    post:
      description: >
        Adds users to an existing group. You must have the UPDATE_GROUP permission
        to use this endpoint.
      tags:
        - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: user_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/UserParameters"
      responses:
        200: 
          description: success
        400:
          description: error
    delete:
      description: >
        Removes a user from the specified groups. You must have the UPDATE_GROUP permission
        to use this endpoint.
      tags: 
        - "admin"
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
          description: >
            Valid [access token](https://docs.cryptomove.com/docs/access-tokens).
        - name: UserDelete_parameters
          description: JSON parameters
          in: body
          schema:
            $ref: "#/definitions/UserDeleteParameters"
      responses: 
        200:
          description: success
        400:
          description: error
    get:
      description: >
        Returns a list of the groups that the specified user belongs to.
        You must have LIST_GROUP_USERS permission for the domain to use this
        endpoint.
      tags: 
        - "admin"
      parameters:
        - name: email
          in: query
          type: string
          description: Login email of a user who belongs to at least one group.
      responses:
        200:
          description: success
        400:
          description: error  

  # /user/login_authorization_code:
  #   post:
  #     description: "User login"
  #     tags:
  #       - "auth"
  #     responses:
  #       200:
  #         description: "logged in"
  #       400:
  #         description: "error"
  # /user/authorization_code_email:
  #   post:
  #     description: "User login"
  #     tags:
  #       - "auth"
  #     responses:
  #       200:
  #         description: "get authorization code by email"
  #       400:
  #         description: "error"
  # /user/secret/update_user_metadata:
  #     post:
  #       description: "Update user metadata for authorized request"
  #       tags:
  #         - "secrets"
  #       responses:
  #         200:
  #           description: "Succesfully update user metadata versions of current key"
  #         400:
  #           description: "Failed to update user  metadata"
  #         500:
  #           description: "Failed to update user  metadata"
  # /user/secret/user_metadata:
  #     post:
  #       description: "Get user metadata for authorized request"
  #       tags:
  #         - "secrets"
  #       responses:
  #         200:
  #           description: "Succesfully get user metadata versions of current key"
  #         400:
  #           description: "Failed to get user metadata"
  #         500:
  #           description: "Failed to get user metadata"
  # /user/server/betacode:
  #   post:
  #     description: "Verify beta code"
  #     tags:
  #       - "auth"
  #     responses:
  #       200:
  #         description: "Information regarding user beta code"
  #       400:
  #         description: "Could not find beta code"
definitions:
  ProtectionGroup:
    type: "object"
    properties:
      protection_setting:
        type: "string"
        description: "Provides the following options:
          * Low: 2 copies, 4 parts, 1 move/day
          * Medium: 3 copies, 8 parts, 12 move/day
          * High: 4 copies, 16 parts, 24 move/day"
        enum:
          - "low"
          - "medium"
          - "high"
  LogoutRequestParameters:
    type: object
    properties:
      email:
        type: string
        description: "Email of the user who will be logged out."
  DeleteRequestParameters:
    type: object
    required:
      - email
      - key_name
    properties:
      email:
        type: string
        description: "Email of an authorized user."
      key_name:
        type: array
        description: "Array of the secrets you want to delete."
        items:
          type: string
          description: Name of the secret you want to delete.
  # DeleteMultipleKeyRequestParameters:
  #   type: object
  #   required:
  #     - email
  #     - key_names
  #   properties:
  #     email:
  #       type: string
  #       description: Email of the authorized user who created the secrets to be deleted.
  #     key_names:
  #       type: array
  #       description: Array of the secrets that you want to delete.
  #       items:
  #         type: string
  #         description: Name of a secret that you want to delete.
  DeleteSharedKeyLinkRequestParameters:
    type: object
    required:
      - email
      - key_name
    properties:
      email:
        type: string
        description: Email of a user with the shared secret.
      key_name:
        type: string
        description: >
          Name of the shared secret that will be removed from the user's list of secrets.    
  VersionDeleteRequestParameters:
    type: object
    required:
      - email
      - key_name
      - key_version
    properties:
      email:
        type: string
        description: Email of an authorized user.
      key_name:
        type: string
        description: Name of the secret.
      key_version:
        type: string
        description: Version of the secret that you want to delete.
  SetAWSAccessParameters:
    type: object
    required:
      - email
      - aws_access_key_id
      - aws_secret_access_key
      - region
    properties:
      email:
        type: string
        description: Email of an authorized user.
      aws_access_key_id:
        type: string
        description: >
          AWS access key ID associated with the IAM account
          that will be creating EC2 instances.
      aws_secret_access_key:
        type: string
        description: >
          AWS secret access key associated with the IAM account that
          will be creating EC2 instances.
      region:
        type: string
        description: >
          Code associated with the region of your EC2 instances.
          You can find the code at [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).
          For example, us-east-2 refers to instances in the US East (Ohio).
  GenerateAWSParameters:
    type: object
    required:
      - email
      - key_name
    properties:
      email:
        type: string
        description: Email of an authorized user.
      key_name:
        type: string
        description: >
          Name of the AWS key pair. This value appears in AWS when creating a new EC2 instance. This value
          is also used as the name of a secret in the CryptoMove key vault; the value of this 
          CryptoMove secret is the private key needed to access your EC2 instance.
  ResetpasswordRequestParameters:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        description: "Email of user."
  SignupRequestParameters:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: "Email of the new user."
      password:
        type: string
        description: "Password of the new user."
  ProtectRequestParameters:
    type: object
    required:
      - email
      - key_name
      - key_value
    properties:
      email:
        type: string
        description: "Email of an authorized user."
      key_name:
        type: string
        description: "Name of the new secret."
      key_value:
        type: string
        description: "Value of the new secret."
      copy_count:
        type: integer
        description: >
          Number of copies of the secret that are kept in CryptoMove. This is for
          debugging purposes and is unrelated to versions of the secret. Maximum
          and default value is 2.
      delete_time:
        type: integer
        description: >
          Number of minutes after which the secret is automatically deleted from CryptoMove.
          Maximum and default value is 525600000 (1000 years).
      move_pace:
        type: integer
        description: >
          Number of times a day that the secret is moved within CryptoMove. Maximum value is
          28800. Default value is 4.
      split_count:
        type: integer
        description: >
          Number of parts into which the secret is fragmented in CryptoMove. Maximum value
          is 4096. Default value is 2.
      without_list:
        type: integer
        description: >
          Setting this parameter to 1 prevents the response from listing
          all of the user's existing secrets. Optional.
      metadata:
        type: object
        description: >
          Metadata that is attached to the secret. If the metadata object is omitted,
          the default values are used. Custom metadata can be attached to the secret
          by adding unique key:value pairs to the metadata object.
        properties:
          application_type:
            type: string
            description: Optional. Defaults to "container".
          classification:
            type: string
            description: >
              Classification of the new secret. Optional. Defaults to "top".
          cloud_type:
            type: string
            description: Optional. Defaults to "aws".
          description:
            type: string
            description: Description of the new secret. Optional.
          environment_type:
            type: string
            description: Optional. Defaults to "dev".
          expiration_time:
            type: integer
            description: Number of days until the secret expires. Optional. Defaults to 10 days.

  ProtectLinkRequestParameters:
    type: object
    required:
      - email
      - key_name
      - key_value
    properties:
      email:
        type: string
        description: "Email of a user with write access to the shared secret."
      key_name:
        type: string
        description: "Link name of the shared secret."
      key_value:
        type: string
        description: "New value of the shared secret."
      without_list:
        type: integer
        description: >
          Setting this parameter to 1 prevents the response from listing
          all of the user's existing secrets. Optional.
      metadata:
        type: object
        description: >
          Only specify those values you want to replace for the shared secret.
        properties:
          application_type:
            type: string
            description: Optional.
          classification:
            type: string
            description: Optional.
          cloud_type:
            type: string
            description: Optional.
          description:
            type: string
            description: Optional.
          environment_type:
            type: string
            description: Optional.
          expiration_time:
            type: integer
            description: Number of days until the secret expires. Optional. Defaults to 10 days.

  ExposeRequestParameters:
    type: object
    required:
      - email
      - key_name
    properties:
      email:
        type: string
        description: "Email of an authorized user."
      key_name:
        type: string
        description: "Name of the secret."
  ExposeLinkRequestParameters:
    type: object
    required:
      - email
      - key_name
    properties:
      email:
        type: string
        description: "Email of a user with read access to the shared secret."
      key_name:
        type: string
        description: "Name of the shared secret."
  SharingRequestParameters:
    type: object
    required:
      - key_name
      - permission
      - usr_id_from
      - usr_id_to
      - email
    properties:
      key_name:
        type: array
        description: Array of the secrets to be shared.
        items:
          type: string
          description: Name of a secret to be shared.
      permission:
        type: string
        description: >
          Permissions to be granted to user.
          Write (W), Read (R), or both (RW).
        enum:
          - R
          - W
          - RW
      usr_id_from:
        type: string
        description: >
          Email of the user who is sharing the secret.
          Must be the user who created the secret.
      usr_id_to:
        type: array
        description: Array of users who will have shared access to the secret.
        items:
          type: string
          description: >
            Email of user who will have shared access to the secret.
      email:
        type: string
        description: >
          Email of the user who created the secret.
          Same value as usr_id_from
  # UnshareRequestParameters:
  #   type: object
  #   required:
  #     - usr_id_from
  #     - key_name
  #   properties:
  #     usr_id_from:
  #       type: string
  #       description: "Email of user who will no longer have access to the secret."
  #     key_name:
  #       type: string
  #       description: "Name of the secret."
  VersionExposeRequestParameters:
    type: object
    required:
      - email
      - key_name
      - key_version
    properties:
      email:
        type: string
        description: "Email of an authorized user."
      key_name:
        type: string
        description: "Name of the secret."
      key_version:
        type: string
        description: "A version number of the secret."
  VersionExposeLinkRequestParameters:
    type: object
    required:
      - email
      - key_name
      - key_version
    properties:
      email:
        type: string
        description: "Email of a user with read access to the shared secret."
      key_name:
        type: string
        description: "Link name of the shared secret."
      key_version:
        type: string
        description: "A version number of the shared secret."
  ListRequestParameters:
    required:
      - email
    type: object
    properties:
      email:
        type: string
        description: "Email of user with access to secrets."
  ListNoDupRequestParameters:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        description: "Email of user with access to secrets."
  VersionListRequestParameters:
    type: object
    required:
      - email
      - key_name
    properties:
      email:
        type: string
        description: "Email of an authorized user."
      key_name:
        type: string
        description: "Name of the secret."
  VersionListLinkRequestParameters:
    type: object
    required:
      - email
      - key_name
    properties:
      email:
        type: string
        description: "Email of a user with read access to the shared secret."
      key_name:
        type: string
        description: "Link name of the shared secret."
  UpdateClassificationRequestParameters:
    type: object
    required:
      - email
      - key_name
      - classification
    properties:
      email:
        type: string
        description: Email of an authorized user.
      key_name:
        type: string
        description: Name of the secret.
      classification:
        type: string
        description: New classification of the secret.
  UpdateExpirationRequestParameters:
    type: object
    required:
      - email
      - key_name
      - key_version
      - expiration_time
    properties:
      email:
        type: string
        description: Email of an authorized user.
      key_name:
        type: string
        description: Name of the secret.
      key_version:
        type: string
        description: A version of the secret.
      expiration_time:
        type: integer
        description: The number of days before the version of the secret will expire.
  updateMetadataRequestParameters:
    type: object
    required:
      - email
      - key_name
      - key_version
      - metadata
    properties:
      email: 
        type: string
        description: Email of user with write access to secret or shared secret.
      key_name:
        type: string
        description: Name of secret or shared secret.
      key_version:
        type: integer
        description: >
          Numerical version of the secret with the metadata that you want to update.
      metadata:
        type: object
        description: >
          Only specify those values you want to update.
        properties:
          application_type:
            type: string
            description: Optional.
          classification:
            type: string
            description: Optional.
          cloud_type:
            type: string
            description: Optional.
          description:
            type: string
            description: Optional.
          environment_type:
            type: string
            description: Optional.
          expiration_time:
            type: integer
            description: Optional.


  updateDescriptionRequestParameters:
    type: object
    required:
      - email
      - key_name
      - description
      - key_version
    properties:
      email:
        type: string
        description: Email of an authorized user.
      key_name:
        type: string
        description: Name of the secret.
      description:
        type: string
        description: New description of the secret.
      key_version:
        type: string
        description: A version of the secret.
  DownloadFileRequestParameters:
    type: object
    required:
      - email
      - filename
    properties:
      email:
        type: string
        description: Email of an authorized user.
      filename:
        type: string
        description: Name of the file that you want to download.
      version:
        type: integer
        description: >
          If specified, downloads a particular version of the file.
          Without this parameter (or if "version":0), the latest version is downloaded.
  DeleteFileRequestParameters:
    type: object
    required:
      - email
      - filename
    properties:
      email:
        type: string
        description: Email of an authorized user.
      filename:
        type: string
        description: Name of the file you want to delete.
      version:
        type: integer
        description: >
          If specified, deletes a particular version of the file.
          Without this parameter (or if "version":0), all versions of the file are deleted.
  GenerateAccessTokenParameters:
    type: object
    required:
      - email
      - password
      - scope
      - expiration_hours
    properties:
      email:
        type: string
        description: >
          Email of an authorized user. The generated token provides access to this user's
          secrets.
      password:
        type: string
        description: Password associated with the user with the specified email.
      scope: 
        type: string
        description: >
          A comma-delimited list, without spaces, of the attributes of the secrets
          that you want to access with the generated access token. Define each
          attribute as a key-value pair, for example, classification:sensitive
          (without spaces). The attributes are cloud_type, environment_type,
          application_type, classification, and secret_name. All five attributes
          must be specified at least once, and you can repeat an
          attribute to specify multiple values, for example, "cloud_type:azure,cloud_type:aws".
          To generate an access token that can access all of the user's secrets, define
          the values of the attributes as \*. 
      expiration_hours:
        type: integer
        description: >
          Number of hours before the access token expires. There is no maximum value.
  RefreshTokenParameters:
    type: object
    required:
      - refresh_token
      - used_access_token
    properties:
      refresh_token:
        type: string
        description: Valid refresh token.
      used_access_token:
        type: string
        description: Previously valid access token. 
  GroupAdminParameters:
    type: object
    properties:
      login:
        type: string
        description: Email of an existing user who will be a group admin.
      groups:
        type: array
        description: >
          Array of the groups for which the user will be a Group Admin, along their permissions
          to those groups.
        items: 
          type: object
          properties:
            group:
              type: string
              description: Name of an existing group for which the user will be a Group Admin.
            permissions:
              type: array
              description: Array of the permissions the Group Admin will have for the group.
              items:
                type: string
                description: Permission that can be assigned to a Group Admin.  
  GroupAdminDeleteParameters:
    type: object
    properties:
      login:
        type: string
        description: Email of user who will stop being a group admin.
      group:
        type: array
        description: Array of groups for which the user will no longer be an admin.
        items:
          type: string
          description: Name of a group.
          
  GroupParameters:
    type: object
    required:
      - group_name
    properties:
      group_name:
        type: string
        description: Name of the group that you want to create.
      group_users:
        type: array
        description: >
          Array of email addresses of the users that you want to add to the new group.
        items:
          type: string
          description: Email address of a CryptoMove user.
  GroupDeleteParameters:
    type: object
    required:
      - group_name
    properties:
      group_name:
        type: string
        description: Name of the group that you want to delete.
  UserParameters:
    type: object
    required:
      - login
      - groups
    properties:
      login:
        type: string
        description: Email address of the user you want to add to the specified groups.
      groups: 
        type: array
        description: Array of the groups to which the user will be added.
        items:
          type: string
          description: Name of an existing group.
  UserDeleteParameters:
    type: object
    required:
      - login
      - groups
    properties:
      login:
        type: string
        description: User that you want to remove from the specified groups.
      groups:
        type: array
        description: Array of the groups from which the user will be removed.
        items:
          type: string
          description: Name of an existing group.
  ListNoDupResponse:
    type: object
    properties:
      keys:
        description: Secrets created by the user
        type: object
        properties:
          keyName:
            type: string
            description: Unique secret name
      links:
        description: Secrets shared to or from the user
        type: object
        properties:
          keyName:
            type: string
            description: Unique shared secret name
      status:
        description: Status from the server
        type: string
